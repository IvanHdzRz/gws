<?xml version="1.0" encoding="utf-8" ?>
<hfmcl:CoreView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:hfmcl="clr-namespace:Honeywell.Firebird.CoreLibrary;assembly=Honeywell.GuidedWork.XF"
             xmlns:i18n="clr-namespace:Honeywell.Firebird.CoreLibrary.Localization.Xaml;assembly=Honeywell.GuidedWork.XF"
             x:Class="Receiving.ReceivingSummaryView">

  <StackLayout Padding="10">
    <Label Text="{Binding Header}" Style="{StaticResource ListHeaderLabelStyle}" AutomationId="ReceivingItemsHeaderLabel" />
    <!-- Unlike the other ListViews used throughout the app, this one does not make use of CachingStrategy="RecycleElement", which was a fix for VORET-546.
    VORET-546 wasn't directly reproducible, however google searches indicated that using the RecycleElement caching strategy was a rememdy for the exception seen
    in that ticket. The reason this ListView does not use RecycleElement as a caching strategy is because we were seeing an undesired symptom: In this list, we
    highlight the first item via the ListView.SelectedItem property to show the user the current item they are on for a given order picking order. 
    With RecycleElement used, this highlight was not showing. This issue has been captured in VORET-557.-->

    <BoxView Style="{StaticResource HorizontalRuleStyle}" />

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"></RowDefinition>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="9*"></ColumnDefinition>
        <ColumnDefinition Width="1*"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <Label Grid.Row="0" Grid.Column="0" HorizontalTextAlignment="Start" Text="{i18n:Translate Receiving_ProductDescription}" AutomationId="ReceivingSummaryViewProductDescriptionLabel" />
      <Label Grid.Row="0" Grid.Column="1" HorizontalTextAlignment="Center" Text="{i18n:Translate Receiving_Qty}" AutomationId="ReceivingSummaryViewQtyLabel"/>
    </Grid>

    <ListView VerticalOptions="FillAndExpand" HasUnevenRows="true" ItemsSource="{Binding CurrentAndUpcomingPicks}" CachingStrategy="RecycleElement" ItemSelected="OnItemSelected" AutomationId="ReceivingItemsList">
      <ListView.ItemTemplate>
        <DataTemplate>
          <ViewCell>
            <ViewCell.View>
              <Grid Padding="5">
                <Grid.RowDefinitions>
                  <RowDefinition Height="60"></RowDefinition>
                  <RowDefinition Height="10"></RowDefinition>
                  <RowDefinition Height="20"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="2*"></ColumnDefinition>
                  <ColumnDefinition Width="2*"></ColumnDefinition>
                  <ColumnDefinition Width="3*"></ColumnDefinition>
                  <ColumnDefinition Width="1*"></ColumnDefinition>
                  <ColumnDefinition Width="1*"></ColumnDefinition>
                  <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Image Grid.Row="0" Grid.Column="0" Source="{Binding ProductImage}" Grid.RowSpan="3" AutomationId="ReceivingSummaryViewProductImage" />
                <Label Grid.Row="0" Grid.Column="1" Text="{Binding ProductName}" Grid.ColumnSpan="4" HorizontalTextAlignment="Start" VerticalTextAlignment="End" FontSize="Small" FontAttributes="Bold" TextColor="{x:Static hfmcl:ColorResources.DefaultTextColor}"  AutomationId="ReceivingSummaryViewProductNameLabel"/>
                <Image Grid.Row="0" Grid.Column="5" Source="green_check.png" Grid.RowSpan="3" IsVisible="{Binding IsComplete}" Margin="0,0,3,0" AutomationId="ReceivingSummaryViewGreenCheckImage" />
                <Image Grid.Row="0" Grid.Column="5" Source="damaged.png" Grid.RowSpan="3" IsVisible="{Binding IsDamaged}" Margin="0,0,3,0"   AutomationId="ReceivingSummaryViewDamagedImage"/>
                <Label Grid.Row="1" Grid.Column="1" Text="{i18n:Translate StockCode}" HorizontalTextAlignment="Start" VerticalTextAlignment="Start" FontSize="Micro" TextColor="Gray"  AutomationId="ReceivingSummaryViewStockCodeLabel" />
                <Label Grid.Row="1" Grid.Column="2" Text="{Binding ProductIdentifier}" HorizontalTextAlignment="Start" VerticalTextAlignment="Start" FontSize="Micro" TextColor="Gray" AutomationId="ReceivingSummaryViewProductIdentifierLabel" />
                <Label Grid.Row="2" Grid.Column="3" Text="{i18n:Translate Qty}" HorizontalTextAlignment="End" VerticalTextAlignment="Center" FontSize="Micro" TextColor="Gray" AutomationId="ReceivingSummaryViewQtyLabel"/>
                <Label Grid.Row="2" Grid.Column="4" Text="{Binding RequestedQuantity}" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" TextColor="Black" FontAttributes="Bold" AutomationId="ReceivingSummaryViewRequestedQuantityLabel"/>
                <Label Grid.Row="0" Grid.Column="5" Text="{Binding RemainingQuantity}" Grid.RowSpan="3" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" FontSize="24" FontAttributes="Bold" TextColor="{x:Static hfmcl:ColorResources.HoneywellRed}" AutomationId="ReceivingSummaryViewRemainingQuantityLabel"/>
              </Grid>
            </ViewCell.View>
          </ViewCell>            
        </DataTemplate>
      </ListView.ItemTemplate>
    </ListView>

    <Button Text="{i18n:Translate ReadyButtonText, Converter={StaticResource StringCaseConverter}, ConverterParameter=U}"
        Command="{Binding ValidationModel.SubmitResponseCommand}"
        CommandParameter="{i18n:Translate accept_entry_word}"
        VerticalOptions="End"
        Style="{StaticResource PrimaryButtonStyle}"
        AutomationId="ReadyButton" />

  </StackLayout>
</hfmcl:CoreView>
